
# Komodo 5.1.0b1

- Add ".DS_Store" and other SCC system control dirs to the list of files
  to exclude from the .xpi and .jar files built by `koext build`.
- Add `koext build --dev` option, mainly to preprocess with "MODE=dev". The
  main intended usage of this is to have a "chrome.p.manifest" file that
  supports both `koext build` for release and `koext build --dev && koext
  devinstall` for quick development. Example "chrome.p.manifest" file:
        # #if MODE == "dev"
        content fastopen content/ xpcnativewrappers=yes
        # #else
        content fastopen jar:fastopen.jar!/content/ xpcnativewrappers=yes
        # #endif
        overlay chrome://komodo/content/komodo.xul chrome://fastopen/content/overlay.xul
- Add preprocessing support (using <http://code.google.com/p/preprocess/>) to
  `koext build`.
- New `koext koinstall` command used for building and installing core Komodo
  extensions into a Komodo build.
- koext v0.3.0
- `koext build` now excludes IDL files from the components directory. The
  IDL files are already being includes in the "idl" directory of the .xpi.
- `koext build` now includes the source UDL files (in the "udl" dir) in an
  extension. This is useful (a) as self-documentation and (b) in case the
  extension is providing UDL library files that other extensions might be
  able to use.
- `koext build` not copies built bits (e.g. "*.xpt" from "*.idl", "*.lexres"
  from "*.idl") into the *source* directory to support working with a
  devinstall.
- Add `koext devinstall` to hookup an extension source dir with a Komodo dev
  build for quick development (don't need to rebuild and reinstall a .xpi).
  Currently this only works in a Komodo development build, but the intention
  is to make this work with a regular Komodo installation as well.


# earlier versions

...
