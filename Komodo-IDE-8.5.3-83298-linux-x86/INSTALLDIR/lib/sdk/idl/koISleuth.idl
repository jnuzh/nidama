/* Copyright (c) 2000-2006 ActiveState Software Inc.
   See the file LICENSE.txt for licensing information. */

#include "nsISupports.idl"
#include "nsITreeView.idl"

interface koISleuthResultsTabManager; // forward
interface koISleuthResultsView; // forward

[scriptable, uuid(ab7e3564-6f39-42a6-9f60-cec158288f91)]
interface koISleuthService : nsISupports {
    void run_sleuth_tests(in wstring cwd,
                          in wstring language,
                          in wstring commandLine,
                          in koISleuthResultsTabManager resultsMgr,
                          in koISleuthResultsView resultsView);
    void stop_sleuth_tests();
    void thread_ended();
    void get_harness_names([array, size_is(count)] out string names,
                            out unsigned long count);
    wstring language_from_harness(in wstring harness_name);
    boolean is_v43_compatible(in wstring harness_name);
    
    // Names for preferences
    // Pref-set on each project, and the global prefs:
    
    readonly attribute string TESTPLAN_PREFNAME;

    // Global prefset, associating a testPlanName with
    // each projectURL.
    readonly attribute string LAST_TESTPLAN_PREFNAME;
    
    // Pref on the global prefset
    
    readonly attribute string LAST_TESTPLAN_PROJECT_URL;
};

[scriptable, uuid(188a2545-1df6-4f91-ab35-7d322810d06d)]
interface koISleuthResultsView : nsITreeView {
    // A tree view for viewing results of Unit Tests

    // Clear the list of find results.
    void Clear();
    void AddDetails(in wstring description,
                    in wstring outcome,
                    in wstring details);
    void UpdateTree();
};


[scriptable, uuid(fa2c77e7-0640-465f-b4b8-c76e0f64dd63)]
interface koISleuthErrorMessagesView : nsITreeView {
    // A tree view for viewing error messages in a single tree.

    // Clear the list of find results.
    void Clear();
    void AddLine(in wstring line);
    void UpdateTree();
};


// Implemented in find's JS code. This is to allow find's Python code to
// work with the Sleuth Results Tab.
//
// This emulates the callback used in FindInFiles

[scriptable, uuid(5f580d6c-fa34-4099-a73c-73dfacaf85a6)]
interface koISleuthResultsTabManager : nsISupports {
    attribute koISleuthResultsView view;
    
    // Methods for the Find back-end to notify the UI of the searching state.
    void runStarted();
    void runFinished();
    void highlightLine(in unsigned long lineNumber);
    void updateResults(in unsigned long num_passes,
                       in unsigned long num_errors,
                       in unsigned long num_failures,
                       in wstring elapsed_time);
};
