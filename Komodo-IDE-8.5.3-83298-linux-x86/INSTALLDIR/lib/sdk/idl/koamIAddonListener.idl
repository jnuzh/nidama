/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is AddonManager XPCOM wrapper.
 *
 * The Initial Developer of the Original Code is
 * Mook <marky+mozhg@activestate.com>.
 * Portions created by the Initial Developer are Copyright (C) 2011
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

/* XPCOM wrapper for AddonManager AddonListener
 * @see https://developer.mozilla.org/en/Addons/Add-on_Manager/AddonListener
 */

interface koamIAddon;

[scriptable, uuid(7de011eb-ac24-4196-9c9c-3935fa0ef7c9)]
interface koamIAddonListener: nsISupports {
    void onEnabling(in koamIAddon addon, in boolean needsRestart);
    void onEnabled(in koamIAddon addon);
    void onDisabling(in koamIAddon addon, in boolean needsRestart);
    void onDisabled(in koamIAddon addon);
    void onInstalling(in koamIAddon addon, in boolean needsRestart);
    void onInstalled(in koamIAddon addon);
    void onUninstalling(in koamIAddon addon, in boolean needsRestart);
    void onUninstalled(in koamIAddon addon);
    void onOperationCancelled(in koamIAddon addon);
    void onPropertyChanged(in koamIAddon addon,
                           [array, size_is(propertyCount)] in string properties,
                           [optional] in unsigned long propertyCount);
};
