/* Copyright (c) 2009 ActiveState Software Inc.
   See the file LICENSE.txt for licensing information. */

#include "nsISupports.idl"
#include "nsITreeView.idl"
#include "nsIDOMElement.idl"
#include "koIProject.idl"
#include "koIViews.idl"


/* An object that represents a selection in the 'Go to File' dialog. */
[scriptable, uuid(0dd87bd7-8df3-5d4b-b417-c2067a45d214)]
interface koIFastOpenHit: nsISupports {
    readonly attribute wstring type;  // The type of hit
    readonly attribute AString path;  // might not actually be a path
    attribute AString shortcut;       // This hit's shortcut, if any
};
/**
 * A hit that refers to a local file; currently only defined for type "path" and
 * "go" hits.
 */
[scriptable, uuid(d6d96259-968f-4194-ab8c-fccfc589b184)]
interface koIFastOpenPathHit: koIFastOpenHit {
    readonly attribute boolean isdir;
    readonly attribute AString dir;     // dirname(path)
    readonly attribute AString base;    // basename(path)
};
/**
 * A hit that refers to a non-local file.
 */
[scriptable, uuid(bb0164df-e77c-40e4-bac7-c3ab0d63a65d)]
interface koIFastOpenURLHit: koIFastOpenHit {
    readonly attribute AUTF8String url;
};
/**
 * A hit that deals with a view; currently only set for `type == "open-view"`
 * hits.
 */
[scriptable, uuid(1f5d5214-2d32-4489-a13e-9c6d01713050)]
interface koIFastOpenViewHit: koIFastOpenHit {
    readonly attribute koIView view;
    readonly attribute AString viewType;
    readonly attribute long windowNum;
    readonly attribute long tabGroupId;
};
/**
 * A separator inserted between different gathers.
 */
[scriptable, uuid(06c74704-1a96-4e18-96a7-25be4fd0db07)]
interface koIFastOpenSeparatorHit: koIFastOpenHit {
};

/* UI Driver API for the "Go to File" dialog.
 * This is a component implemented in the dialog's JavaScript.
 */
[scriptable, uuid(131d4343-19ba-f942-9410-e2f019684937)]
interface koIFastOpenUIDriver: nsISupports {
    void setCurrPath(in wstring path);

    void searchStarted();
    void searchAborted();
    void searchCompleted();
};


/* Driver API for the "Go to File" dialog. */
[scriptable, uuid(2c4ddcd5-77b4-e347-85d5-106b2f403dd9)]
interface koIFastOpenSession: nsISupports {
    // Configuration items from which query results are derived.
    void setCurrProject(in koIProject project);
    // - Ordered (in viewhistory order) list of currently open views.
    void setOpenViews(in unsigned long count,
        [array, size_is(count)] in nsIDOMElement views);
    void setCurrentPlace(in AString placesURI);
    void setCurrHistorySession(in wstring sessionName);

    // Start a search for files with the given query string. This
    // will cancel a previous `findFiles` call. Results are returned
    // by calling the `uiDriver`.
    void findFiles(in wstring query);
    
    // Synchronously search with the given query string and return the first
    // hit, or null.
    koIFastOpenHit findFileSync(in wstring query, in double timeout);

    // Abort a current search (if any).
    void abortSearch();

    // Cleanup any working references.
    void finalize();

    // Truncate the path as best as possible, such as relavatizing from the
    // home directory or relavatizing from the base project directory.
    AString relavatizePath(in AString path);

    // Return the selected treeview hits.
    void getSelectedHits([optional] out unsigned long count,
        [retval, array, size_is(count)] out koIFastOpenHit hits);

    // The currently focused hit, or null
    readonly attribute koIFastOpenHit focusedHit;

    /**
     * Set a shortcut
     */
    void setShortcut(in koIFastOpenHit hit, in AString shortcut);
};

[scriptable, uuid(6c8c66cb-f1c3-834e-86ac-905cb155d595)]
interface koIFastOpenService: nsISupports {
    // Default value for the `fastopen_path_excludes` preference.
    readonly attribute wstring DEFAULT_PATH_EXCLUDES;
    
    koIFastOpenSession getSession(in koIFastOpenUIDriver uiDriver);
};
