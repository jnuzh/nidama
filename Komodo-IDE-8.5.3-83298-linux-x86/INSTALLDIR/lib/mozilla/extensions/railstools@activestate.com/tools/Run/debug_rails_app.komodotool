{
  "keyboard_shortcut": "", 
  "name": "debug rails app", 
  "language": "JavaScript", 
  "trigger_enabled": 0, 
  "rank": 100, 
  "trigger": "trigger_postopen", 
  "value": [
    "(function() {", 
    "var bundle = Components.classes[\"@mozilla.org/intl/stringbundle;1\"]", 
    "            .getService(Components.interfaces.nsIStringBundleService)", 
    "            .createBundle(\"chrome://railstools/locale/rails.properties\");", 
    "    if (!ko.dbg) {", 
    "        var productType = Components.classes[\"@activestate.com/koInfoService;1\"].getService(Components.interfaces.koIInfoService).prettyProductType;", 
    "        var msg;", 
    "        if (productType != \"IDE\") {", 
    "            msg = bundle.formatStringFromName('Sorry debugging isnt available in Komodo', [productType], 1)", 
    "        } else {", 
    "            msg = bundle.formatStringFromName( 'Internal error debugging isnt available in Komodo', [productType], 1)", 
    "        }", 
    "        ko.dialogs.alert(bundle.GetStringFromName(\"Debugging not supported\"), msg);", 
    "        return;", 
    "    }", 
    "    function launchDebugger(editor, host, port, rbpath) {", 
    "        var obj = {ruby: null, env:null};", 
    "        ko.extensions.rails.setup_associated_paths_env(obj);", 
    "        var rdbenv = 'RUBYDB_OPTS=remoteport=' + host + \":\" + port;", 
    "        if (obj.env) {", 
    "            obj.env += \"\\n\" + rdbenv;", 
    "        } else {", 
    "            obj.env = rdbenv;", 
    "        }", 
    "        var options = { runIn: \"new-console\",", 
    "                        env : obj.env,", 
    "                        __END__ : null", 
    "        };", 
    "        var cmd_by_version = {", 
    "            2: '%(rubyPath) -I %(rbpath) -r rdbgp.rb script/server webrick',", 
    "            3: '%(rubyPath) -I %(rbpath) -r rdbgp.rb script/rails server webrick'", 
    "        }", 
    "        var versionNo = ko.extensions.rails.getRailsVersionInRange(2, 3);", 
    "        var config = {", 
    "            rubyPath: obj.ruby,", 
    "            rbpath: rbpath", 
    "        }", 
    "        var cmd = ko.extensions.rails.interpolate(cmd_by_version[versionNo], config);", 
    "        ko.extensions.rails.runCommand(editor, cmd, options);", 
    "    }", 
    "    try {", 
    "        if (!ko.dbg.listener) {", 
    "            var productTypePrintable;", 
    "            try {", 
    "                productTypePrintable = bundle.formatStringFromName(\"the X_productType_\",", 
    "                    [Components.classes[\"@activestate.com/koInfoService;1\"].", 
    "                     getService(Components.interfaces.koIInfoService).productType], 1);", 
    "            } catch(ex) {", 
    "                productTypePrintable = bundle.GetStringFromName(\"this\");", 
    "            }", 
    "            throw new Error(bundle.formatStringFromName(\"Debugging is not supported in X edition of Komodo\",", 
    "                                                        [productTypePrintable], 1));", 
    "        }", 
    "        var os = Components.classes[\"@activestate.com/koOs;1\"].getService();", 
    "        var ospath = os.path;", 
    "        var dirSvc = Components.classes[\"@activestate.com/koDirs;1\"].getService();", 
    "        var items = [dirSvc.supportDir, \"dbgp\", \"rubylib\"];", 
    "        var rbpath = ospath.joinlist(items.length, items).replace(/\\\\/g, '/');", 
    "        var host = 'localhost';", 
    "        if (!ko.dbg.listener.isListening()) {", 
    "            ko.dbg.controller.do_cmd_debuggerListener();", 
    "            if (!ko.dbg.listener.isListening()) {", 
    "                ko.dialogs.alert(bundle.GetStringFromName(\"Please choose a different port and retry this command\"));", 
    "                prefs_doGlobalPrefs('debuggerConnection');", 
    "                return;", 
    "            }", 
    "        }", 
    "        var port = ko.dbg.listener.port;", 
    "        launchDebugger(this, host, port, rbpath);", 
    "    } catch(ex) {", 
    "        alert(ex + \"\\n\");", 
    "    }", 
    "})();"
  ], 
  "version": "1.0.12", 
  "async": 0, 
  "type": "macro", 
  "icon": "chrome://famfamfamsilk/skin/icons/bug_go.png"
}